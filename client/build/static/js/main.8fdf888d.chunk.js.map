{"version":3,"sources":["comps/Header.jsx","comps/DailyMacrosCount.jsx","App.js","index.js"],"names":["Header","className","DailyMacrosCount","defaultDailyStats","protein","carbs","fat","calories","defaultProtein","useState","setProtein","proteinConsumed","setProteinConsumed","setCarbs","carbsConsumed","setCarbsConsumed","setFat","fatConsumed","setFatConsumed","updateLocalStorage","name","value","relevantStats","localStorage","getItem","JSON","parse","setItem","stringify","useEffect","now","Date","setHours","lastSavedDate","dir","pattern","type","onChange","ev","target","onClick","require","default","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fdf888d.chunk.js","sourcesContent":["function Header() {\r\n    return (\r\n        <div className=\"text-center mt-5\">\r\n            <h2>\r\n                ניהול יומי\r\n            </h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from 'react'\r\n\r\nfunction DailyMacrosCount() {\r\n\r\n    let defaultProtein = \"120\"\r\n    let defaultCarbs = \"230\"\r\n    let defaultFat = \"80\"\r\n    let defaultCalories = defaultProtein * 4 + defaultCarbs * 4 + defaultFat * 9\r\n\r\n    let defaultDailyStats = {\r\n        protein: defaultProtein,\r\n        carbs: defaultCarbs,\r\n        fat: defaultFat,\r\n        calories: defaultCalories\r\n    }\r\n\r\n    let [protein, setProtein] = useState(\"\")\r\n    let [proteinConsumed, setProteinConsumed] = useState(\"\")\r\n    let [carbs, setCarbs] = useState(\"\")\r\n    let [carbsConsumed, setCarbsConsumed] = useState(\"\")\r\n    let [fat, setFat] = useState(\"\")\r\n    let [fatConsumed, setFatConsumed] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        let now = new Date().setHours(0, 0, 0, 0)\r\n        let lastSavedDate = localStorage.getItem(\"adamLastDate\")\r\n        if (!lastSavedDate) {\r\n            localStorage.setItem(\"adamLastDate\", now)\r\n        }\r\n        else {\r\n            let relevantStats\r\n            if (now > lastSavedDate) {\r\n                localStorage.setItem(\"adamStats\", JSON.stringify(defaultDailyStats))\r\n            }\r\n            else if (!localStorage.getItem(\"adamStats\")) {\r\n                localStorage.setItem(\"adamStats\", JSON.stringify(defaultDailyStats))\r\n            }\r\n\r\n            relevantStats = localStorage.getItem(\"adamStats\")\r\n            relevantStats = JSON.parse(relevantStats)\r\n            setProtein(relevantStats.protein)\r\n            setCarbs(relevantStats.carbs)\r\n            setFat(relevantStats.fat)\r\n        }\r\n\r\n    }, [])\r\n\r\n    function updateLocalStorage(name, value) {\r\n        // let name = ev.target.name\r\n        // let value = ev.target.value\r\n        let relevantStats = localStorage.getItem(\"adamStats\")\r\n        relevantStats = JSON.parse(relevantStats)\r\n        relevantStats[name] = value\r\n        localStorage.setItem(\"adamStats\", JSON.stringify(relevantStats))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container text-center mt-5\" dir=\"rtl\">\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    חלבון\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    {protein}\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <input pattern=\"[0-9]*\" type=\"tel\" name=\"proteinConsumed\" className=\"form-control\" value={proteinConsumed} onChange={(ev) => { setProteinConsumed(ev.target.value) }} />\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <button className=\"btn btn-success\" name=\"protein\" onClick={(ev) => { setProtein(protein - proteinConsumed); updateLocalStorage(\"protein\", protein - proteinConsumed); setProteinConsumed(\"\") }}>נאכל</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-2\">\r\n                    פחמימה\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    {carbs}\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <input pattern=\"[0-9]*\" type=\"tel\" name=\"carbsConsumed\" className=\"form-control\" value={carbsConsumed} onChange={(ev) => { setCarbsConsumed(ev.target.value) }} />\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <button className=\"btn btn-success\" name=\"carbs\" onClick={(ev) => { setCarbs(carbs - carbsConsumed); updateLocalStorage(\"carbs\", carbs - carbsConsumed); setCarbsConsumed(\"\") }}>נאכל</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-2\">\r\n                    שומן\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    {fat}\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <input pattern=\"[0-9]*\" type=\"tel\" name=\"fatConsumed\" className=\"form-control\" value={fatConsumed} onChange={(ev) => { setFatConsumed(ev.target.value) }} />\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <button className=\"btn btn-success\" name=\"fat\" onClick={(ev) => { setFat(fat - fatConsumed); updateLocalStorage(\"fat\", fat - fatConsumed); setFatConsumed(\"\") }}>נאכל</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-2\">\r\n                    קלוריות\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    {(protein * 4) + (carbs * 4) + (fat * 9)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyMacrosCount;\r\n","const { default: Header } = require(\"./comps/Header\");\nconst { default: DailyMacrosCount } = require('./comps/DailyMacrosCount')\n\nfunction App() {\n  return (\n    <div className=\"App text-center\">\n      <Header></Header>\n      <DailyMacrosCount></DailyMacrosCount>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}